name: Morden Security CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [7.4, 8.0, 8.1, 8.2]

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: sqlite3, openssl, json, mbstring
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit --coverage-clover coverage.xml

    - name: Run PHPCS
      run: |
        if [ -f "vendor/bin/phpcs" ]; then
          vendor/bin/phpcs --standard=WordPress src/
        else
          echo "PHPCS not installed, skipping..."
        fi

    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.1'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run security scan
      run: |
        echo "Security scan placeholder"
        # Add actual security scanning tools here

  build:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v3

    - name: Build plugin package
      run: |
        mkdir -p build
        rsync -av --exclude-from='.distignore' . build/morden-security/
        cd build && zip -r morden-security.zip morden-security/

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/morden-security.zip
        asset_name: morden-security.zip
        asset_content_type: application/zip